version: "3.9"

services:
  db:
    container_name: "db"
    build: ./db
    env_file:
      - ./backend/.env
    volumes:
      - ./db/data:/var/lib/postgresql/data
    expose:
      - "5432"
    ports:
      - 5433:5432
    healthcheck:
        test: ["CMD", "psql", "-h", "localhost", "-U", "app", "-d", "movies_database"]
        interval: 2s
        retries: 100

  sqlite-transfer:
    container_name: "sqlite-transfer"
    build: ./sqlite_transfer
    env_file:
      - ./backend/.env
    depends_on:
      app:
        condition: service_healthy

  app:
    container_name: "app"
    build: ./backend
    env_file:
      - ./backend/.env
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/static:/opt/app/static
    healthcheck:
      test: ["CMD-SHELL", "[ -e /opt/app/static ]"]
      interval: 2s
      retries: 100

  redis:
    container_name: "redis"
    image: redis:7.2.4
    restart: always
    deploy:
      resources:
        limits:
          memory: 50M
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 50

  swagger:
    container_name: "docs"
    image: swaggerapi/swagger-ui:v5.11.8
    volumes:
      - ./swagger/openapi.yaml:/swagger.yaml
    env_file:
      - ./backend/.env
    ports:
      - 8080:8080
    depends_on:
      - app

  fastapi:
    container_name: "fastapi"
    build: ./fastapi
    env_file:
      - ./fastapi/.env
    command: ["/app/src/docker/app.sh"]
    ports:
      - 3000:3000
    depends_on:
      - elasticsearch
      - redis

  nginx:
    container_name: "nginx"
    restart: always
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - ./backend/static:/static/:ro
    depends_on:
      - app
    ports:
      - "80:80"

  elasticsearch:
    container_name: "elasticsearch"
    image: elasticsearch:8.12.1
    ports:
      - 9200:9200
    volumes:
      - "./es/data:/usr/share/elasticsearch/data"
      - "./es/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cat/health?h=status | grep -q green"]
      retries: 300
      interval: 2s

  kibana:
    container_name: "kibana"
    image: kibana:8.12.1
    ports:
      - 5601:5601
    depends_on: [ "elasticsearch" ]
    volumes:
      - "./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601"]
      retries: 300
      interval: 2s